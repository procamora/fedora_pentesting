#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import time
from typing import Text

from pynput.keyboard import Key, Controller
from pynput.mouse import Listener

"""
# In reverse shell
$ python -c 'import pty; pty.spawn("/bin/bash")'
Ctrl-Z

# In Kali
$ stty raw -echo
$ fg

# In reverse shell
$ reset
$ export SHELL=bash
$ export TERM=xterm-256color
$ stty rows <num> columns <cols>
"""


def on_click(x, y, button, pressed):
    #print('{0} at {1}'.format('Pressed' if pressed else 'Released', (x, y)))
    if not pressed:
        # Stop listener
        return False
    else:
        keyboard = Controller()

        keyboard.type("python -c 'import pty; pty.spawn(\"/bin/bash\")'")
        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        time.sleep(0.5)

        keyboard.type("python3 -c 'import pty; pty.spawn(\"/bin/bash\")'")
        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        time.sleep(0.5)

        with keyboard.pressed(Key.ctrl):
            keyboard.press('Z')
            keyboard.release('Z')
            time.sleep(0.5)

        keyboard.type("stty raw -echo")
        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        time.sleep(0.5)

        keyboard.type("fg")
        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        time.sleep(0.5)

        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        time.sleep(0.5)

        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        time.sleep(0.5)


        #keyboard.type("reset")
        #keyboard.press(Key.enter)
        #keyboard.release(Key.enter)
        #time.sleep(0.5)

        keyboard.type("export SHELL=bash")
        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        time.sleep(0.5)

        keyboard.type("export TERM=xterm-256color")
        keyboard.press(Key.enter)
        keyboard.release(Key.enter)
        time.sleep(0.5)

        keyboard.type("stty rows 53 columns 190")
        keyboard.press(Key.enter)
        keyboard.release(Key.enter)


# Collect events until released
with Listener(on_click=on_click) as listener:
    listener.join()
